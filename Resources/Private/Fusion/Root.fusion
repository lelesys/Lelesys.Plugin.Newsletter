# Newsletter Subscribtion plugin
prototype(Lelesys.Plugin.Newsletter:Subscribtion) < prototype(Neos.Neos:Plugin)
prototype(Lelesys.Plugin.Newsletter:Subscribtion) {
	package = 'Lelesys.Plugin.Newsletter'
	controller = 'Person'
	action = 'new'
}

# Newsletter Subscribtion Confirmation plugin
prototype(Lelesys.Plugin.Newsletter:SubscribtionConfirmation) < prototype(Neos.Neos:Plugin)
prototype(Lelesys.Plugin.Newsletter:SubscribtionConfirmation) {
	package = 'Lelesys.Plugin.Newsletter'
	controller = 'Person'
	action = 'subscriptionConfirmation'
}

# For Html format request
prototype(Lelesys.Plugin.Newsletter:NewsletterHtml) < prototype(Neos.Neos:Page)
prototype(Lelesys.Plugin.Newsletter:NewsletterHtml) {
	body {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/Newsletter/Newsletter.html'
		sectionName = 'body'
		content {
			main = Neos.Neos:PrimaryContent
			main {
				nodePath = 'main'
			}
		}
	}

	# optimize html output for newsletters

	prototype(Neos.Neos:ContentCollection)  {
		attributes.class >
	}
	prototype(Neos.NodeTypes:Image) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Image.html'

	}
	prototype(Neos.NodeTypes:TextWithImage) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/TextWithImage.html'
	}

	prototype(Neos.NodeTypes:Text) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Text.html'

	}
	prototype(Neos.NodeTypes:Headline) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Headline.html'
	}

	prototype(Neos.NodeTypes:MultiColumnItem) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/MultiColumnItem.html'
		attributes.class = ${'col-sm-' + String.split(q(node).parent().property('layout'), '-')[multiColumnIteration.index]}
		align = ${multiColumnIteration.isLast ? 'right' : 'left'}
	}
	prototype(Neos.NodeTypes:MultiColumn) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/MultiColumn.html'
		columns.iterationName = 'multiColumnIteration'
	}
}
root.newsletterHtml {
   position = 'end 9993'
   condition = ${q(documentNode).is('[instanceof Lelesys.Plugin.Newsletter:Newsletter]') && request.format == 'html'}
   type = 'Lelesys.Plugin.Newsletter:NewsletterHtml'
}

# For txt format request
prototype(Lelesys.Plugin.Newsletter:NewsletterPlainText) < prototype(Neos.Fusion:Array)
prototype(Lelesys.Plugin.Newsletter:NewsletterPlainText) {
	body = Neos.Fusion:Template
	body {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/Newsletter/Newsletter.txt'
		sectionName = 'body'
		content {
			main = Neos.Neos:PrimaryContent
			main {
				nodePath = 'main'
			}
		}
	}

	prototype(Neos.Neos:ContentCollection)  {
		attributes.class >
	}

	# optimize standard nodeTypes for text rendering
	prototype(Neos.NodeTypes:Text) {
		attributes >
		@process.contentElementWrapping >
		text.@process.stripTags = ${String.stripTags(value)}
	}
	prototype(Neos.NodeTypes:Headline) {
		@process.contentElementWrapping >
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Headline.txt'
		attributes >
		title.@process.stripTags = ${String.stripTags(value)}
	}
	prototype(Neos.NodeTypes:Html) {
		@process.contentElementWrapping >
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Html.txt'
		attributes >
		source.@process.stripTags = ${String.stripTags(value)}
	}
	prototype(Neos.NodeTypes:Image) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/Image.txt'
		attributes >
		@process.contentElementWrapping >
	}
	prototype(Neos.NodeTypes:TextWithImage) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/TextWithImage.txt'
		attributes >
		@process.contentElementWrapping >
		text.@process.stripTags = ${String.stripTags(value)}
	}
	prototype(Neos.NodeTypes:MultiColumn) {
		@process.contentElementWrapping >
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/MultiColumn.txt'

	}
	prototype(Neos.NodeTypes:MultiColumnItem) {
		templatePath = 'resource://Lelesys.Plugin.Newsletter/Private/Templates/NodeTypes/MultiColumnItem.txt'
		attributes >
		@process.contentElementWrapping >
		columns.@process.stripTags = ${String.stripTags(value)}
	}

}

root.newsletterPlainText {
	@position = 'end 9994'
	condition = ${q(documentNode).is('[instanceof Lelesys.Plugin.Newsletter:Newsletter]') && request.format == 'txt'}
	type = 'Lelesys.Plugin.Newsletter:NewsletterPlainText'
}